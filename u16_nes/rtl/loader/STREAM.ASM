E_ENF   EQU 1                   ; entry not foundE_NES   EQU 2                   ; not enough spaceE_DNF   EQU 8                   ; device not foundE_DNR   EQU 9                   ; device not readyE_PNF   EQU 10                  ; partition not foundE_WRP   EQU 16                  ; write protectionE_WGS   EQU 24                  ; wrong streamE_SNR   EQU 25                  ; stream not ready;------------------------------------------------------------------------------FAT_DRV          EXX                     ; SAVE REG	        LD HL,FUX               ; HL<-Function Table; C<-Function Number        LD B,0        LD C,A        ADD HL,BC               ; HL+BC	ADD HL,BC		; HL+BC        LD A,(HL)               ; GET Function Address        INC HL        LD H,(HL)               ; HL- Function Address        LD L,A        LD BC,RORO        PUSH BC        PUSH HL                 ; Function Address in STACK	EXX			; RESTORE REGRORO    RETFUX     DW STREAM               ; 0 = CRTSTREAM	DW FENTRY               ; 1 = FENTRY	DW GDIR                 ; 2 = SETDIR 	DW LOAD512              ; 3 = READ512;------------------------------------------------------------------------------STREAM;i: B - Device - NOT USED (0 = SD);   C - Partition;o: C - Stream Number        PUSH BC	; STRMCLR - очищаем обасть памяти от VALS до STRMED	LD HL,VALS        LD DE,HL        INC DE        LD (HL),0        LD BC,STRMED-VALS-1        LDIR        POP BC         ; SD Card        CALL SD__OFF       	; JP SD__OFF        ; XOR A                 ; A=0: select SD   	; инициализируем SD		CALL SEL_DEV            ;IDE_INI+3 => N1: SELsd SD_INIT        JR NZ,EDNF	;читаем MBR, FAT32         CALL HDD                ;SEARCH PARTITION (TSFAT.ASM)         JR NZ,EPNF              ;HDD return 0xO-OK        LD HL,0        LD (CRRR),HL            ; Clear (CRRR), (CRRR+2)        LD (CRRR+2),HL         ;LD A,1,(STST),A;Stream Ready        XOR A        LD C,A        RET; ErrorEWGS    LD A,E_WGS        OR A        RETEDNF    LD A,E_DNF        OR A        RETEPNF    LD A,E_PNF        OR A        RET;------------------------------------------------------------------------------FENTRY  ;i:     LSTCAT(4) - Active DIR;       HL - Buffer with Name	CALL SRHDRN            ; TSFAT.ASM	JR Z,EENF              ; IF OK, HL/DE- Cluster number        LD (CRRR),HL                 LD (CRRR+2),DE        EXX        CALL GFILE              LD HL,(ENTRY+28)        LD DE,(ENTRY+30)        XOR A                   ; OK A=0        RET                     ; => EXITEENF    LD A,E_ENF        OR A                    ; ERROR	RET;GIPAG=>;i:HL(4)-Cluster number //CALL XSPOZ//CALL XPOZIGFILE   LD HL,CRRR        JP GIPAG GDIR    LD HL,CRRR        JP GLSTCAT        